getwd()
bodies <- read.csv('bodies.csv',sep=',',stringsAsFactors=F)
bodies
library(devtools)
use_data(bodies)
bodies <- read.csv('tires.csv',sep=',',stringsAsFactors=F)
bodies <- read.csv('gilders.csv',sep=',',stringsAsFactors=F)
bodies <- read.csv('gliders.csv',sep=',',stringsAsFactors=F)
bodies <- read.csv('characters.csv',sep=',',stringsAsFactors=F)
characters <- read.csv('characters.csv',sep=',',stringsAsFactors=F)
gliders <- read.csv('gliders.csv',sep=',',stringsAsFactors=F)
tires <- read.csv('tires.csv',sep=',',stringsAsFactors=F)
use_data(gliders)
use_data(tires)
use_data(characters)
bodies
nrows(bodies)
nrow(bodies)
ncol(bodies)
sales <- read.csv('games_sold.csv',sep=',',stringsAsFactors=F)
use_data(sales)
nrow(sales)
ncol(sales)
sales
sales <- read.csv('games_sold.csv',sep=';',stringsAsFactors=F)
sales
sales <- read.csv('games_sold.csv',sep=';',stringsAsFactors=F)
sales
sales$ï..Game
sales <- read.csv('games_sold.csv',sep=';',stringsAsFactors=F)
sales$ï..Game
colnames(sales)
colnames(sales) <- c("Game", "System", "Release", "Units.sold.in.million")
use_data(sales)
use_data(sales, overwrite=TRUE)
colnames(sales) <- c("Game", "System", "Release", "Sales")
use_data(sales, overwrite=TRUE)
?ssales
?sales
devtools::document()
?sales
bestfriend <- read.csv('best_friend.csv',sep=';',stringsAsFactors=F)
bestfriend
colnames(bestfriend) <- c("Version", "Name")
use_data(bestfriend, internal = TRUE)
?bestfriend
bestfriend$version = 2
bestfriend <- read.csv('best_friend.csv',sep=';',stringsAsFactors=F)
use_data(bestfriend, internal = TRUE)
bestfriend
bestfriend <- read.csv('best_friend.csv',sep=';',stringsAsFactors=F)
colnames(bestfriend) <- c("Version", "Name")
use_data(bestfriend, internal = TRUE, overwrite = TRUE)
bf <- bestfriend
bf$version == 2
bf$Version == 2
bs[bf$Version == 2, "Name"]
bf[bf$Version == 2, "Name"]
bf
bestfriend <- read.csv('best_friend.csv',sep=';',stringsAsFactors=F)
colnames(bestfriend) <- c("Version", "Name")
use_data(bestfriend, internal = TRUE, overwrite = TRUE)
bf <- bestfriend
bf[bf$Version == 2, "Name"]
best_friend <- function(version) {
bf_data <- bestfriend
name <- bf_data[bf_data$Version == 2, "Name"]
return (name)
}
best_friend(2)
best_friend(1)
best_friend <- function(version) {
bf_data <- bestfriend
name <- bf_data[bf_data$Version == version, "Name"]
return (name)
}
best_friend(1)
best_friend(2)
mario <- function() {
print("It's-a Me, Mario!")
}
best_friend <- function(version) {
bf_data <- bestfriend
name <- bf_data[bf_data$Version == version, "Name"]
return (name)
}
mario()
devtools::load_all(".")
mario()
devtools::load_all(".")
mario()
devtools::load_all(".")
devtools::load_all(".")
mario()
devtools::load_all(".")
mario3()
devtools::load_all(".")
mario3()
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
ggplot2::ggplot(data=sales, aes(x=Game, y=Sales)) +
geom_bar(stat="identity")
ggplot2::ggplot(data=sales, ggplot2::aes(x=Game, y=Sales)) +
geom_bar(stat="identity")
ggplot2::ggplot(data=sales, ggplot2::aes(x=Game, y=Sales)) +
ggplot2::geom_bar(stat="identity")
plot_sales <- function(type = "bar") {
base <- ggplot2::ggplot(data=sales, ggplot2::aes(x=Game, y=Sales))
if (type == "bar") {
base <- base + ggplot2::geom_bar(stat="identity")
}
}
plot_sales()
plot_sales()
plot_sales <- function(type = "bar") {
base <- ggplot2::ggplot(data=sales, ggplot2::aes(x=Game, y=Sales))
if (type == "bar") {
base <- base + ggplot2::geom_bar(stat="identity")
}
return (base)
}
plot_sales()
plot_sales <- function(type = "bar") {
base <- ggplot2::ggplot(data=sales, ggplot2::aes(x=Game, y=Sales))
if (type == "bar") {
plot <- base + ggplot2::geom_bar(stat="identity")
} else if (type == "pie") {
bar <- base + ggplot2::geom_bar(width=1, stat="identity")
plot <- bar + coord_polar("y", start=0)
}
return (base)
}
plot_sales()
devtools::load_all(".")
mario_plot_sales()
mario_plot_sales("pie")
devtools::load_all(".")
mario_plot_sales("pie")
devtools::load_all(".")
mario_plot_sales("pie")
devtools::load_all(".")
mario_plot_sales("pie")
devtools::load_all(".")
mario_plot_sales("pie")
devtools::load_all(".")
mario_plot_sales("pie")
devtools::load_all(".")
mario_plot_sales("pie")
devtools::load_all(".")
mario_plot_sales("pie")
devtools::load_all(".")
mario_plot_sales("pie")
mario_plot_sales()
?bestfriend
library(devtools)
devtools::document()
library(devtools)
devtools
devtools::document()
library(devtools)
devtools::document()
testthat::test_that("general")
usethis::use_test("name")
devtools::load_all(".")
test_that("Mario greets right", {
expect_equal(mario(), "It's-a Me, Mario!")
})
test_that()
test()
devtools::load_all(".")
test()
devtools::load_all(".")
test()
devtools::load_all(".")
test()
devtools::load_all(".")
devtools::load_all(".")
devtools::test()
?mario_plot_sales
?mario_plot_sales
devtools::document()
?mario_plot_sales
devtools::load_all(".")
?mario_plot_sales
devtoosl::use_package(ggplot2)
devtools::use_package(ggplot2)
usethis::use_package("ggplot2")
usethis::use_package("ggplot2", "depends")
usethis::use_package("ggplot2")
usethis::use_package("ggplot2")
check()
devtools::check()
